/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.FarmerRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Network.SubNetwork;
import Business.Organization.BuyerOrganization;
import Business.Organization.EndUserOrganization;
import Business.Organization.FarmerOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.EventOrganizerWorkRequest;
import Business.WorkQueue.FarmerSellWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mayank
 */
public class SellMyCrop extends javax.swing.JPanel {

    /**
     * Creates new form SellMyCrop
     */
    JPanel userProcessContainer;
    UserAccount account;
    FarmerOrganization farmerOrganization;
    Enterprise enterprise;
    EcoSystem business;

    SellMyCrop(JPanel userProcessContainer, UserAccount account, FarmerOrganization farmerOrganization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.farmerOrganization = farmerOrganization;
        this.enterprise = enterprise;
        this.business = business;
        
        populateMyQTable();
    }
    
    public void populateMyQTable(){
        DefaultTableModel dtm = (DefaultTableModel)tblRequest.getModel();
        dtm.setRowCount(0);
        for(WorkRequest wk : account.getWorkQueue().getWorkRequestList()){
            if (wk instanceof FarmerSellWorkRequest){
                Object[] row1 = new Object[6];
                row1[0] = ((FarmerSellWorkRequest) wk).getCropName();
                row1[1] = ((FarmerSellWorkRequest) wk).getQuantity();
                row1[2] = ((FarmerSellWorkRequest) wk).getContactDetails();
                row1[3] = wk.getStatus();
                row1[4] = wk.getReceiver();
                row1[5] = wk.getAnswer();
                
        
                 dtm.addRow(row1);
                
            }
            
        
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtCropName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCropQuantity = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtContactDetails = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRequest = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Sell Crop");

        jLabel2.setText("Crop Name");

        txtCropName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCropNameActionPerformed(evt);
            }
        });

        jLabel3.setText("Crop Quantity");

        jLabel4.setText("Contact Details");

        txtContactDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtContactDetailsActionPerformed(evt);
            }
        });

        btnSubmit.setText("Submit Request");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        tblRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Crop Name", "Quantity", "Contact", "Status", "Request Accepted By", "Reply"
            }
        ));
        jScrollPane1.setViewportView(tblRequest);

        jLabel5.setText("My Request");

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(38, 38, 38)
                        .addComponent(txtCropName, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSubmit)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtCropQuantity)
                                .addComponent(txtContactDetails, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE))))
                    .addComponent(jLabel5)
                    .addComponent(btnBack)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 719, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(90, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCropName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCropQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtContactDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(btnSubmit)
                .addGap(21, 21, 21)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBack)
                .addContainerGap(210, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtCropNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCropNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCropNameActionPerformed

    private void txtContactDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtContactDetailsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtContactDetailsActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        String crop = txtCropName.getText();
        String quantity = txtCropQuantity.getText();
        String contact = txtContactDetails.getText();
        
        FarmerSellWorkRequest req = new FarmerSellWorkRequest();
        req.setCropName(crop);
        req.setQuantity(quantity);
        req.setContactDetails(contact);
        req.setSender(account);
        
        boolean found = false;
        for (Network n : business.getNetworkList()) {
            for (SubNetwork sub : n.getSubNet()) {
                if (sub.toString().equalsIgnoreCase(account.getCity())) {
                    
                        for (Enterprise e : sub.getEnterpriseDirectory().getEnterpriseList()) {
                            for (Organization org : e.getOrganizationDirectory().getOrganizationList()) {
                                if (org instanceof BuyerOrganization) {
                                    req.setStatus("Posted");
                                    org.getWorkQueue().getWorkRequestList().add(req);
                                    account.getWorkQueue().getWorkRequestList().add(req);
                                    found = true;
                                    
                                    break;
                                }

                                
                            }
                        }
                    }
                    // else JOptionPane.showMessageDialog(null,"No farmer organizations found in your city !");
                }

            }
        if(found){
            JOptionPane.showMessageDialog(null,"Request Submitted");
            populateMyQTable();
            
        }
        
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRequest;
    private javax.swing.JTextField txtContactDetails;
    private javax.swing.JTextField txtCropName;
    private javax.swing.JTextField txtCropQuantity;
    // End of variables declaration//GEN-END:variables
}
